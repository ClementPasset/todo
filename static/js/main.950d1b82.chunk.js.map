{"version":3,"sources":["utils/colors.js","components/Header/index.js","components/Todo/index.js","components/List/index.js","components/AddButton/index.js","components/App.js","index.js"],"names":["colors","StyledHeading","styled","h1","Header","Todo","lists","setLists","todo","useState","isSelected","setSelected","name","setName","addTask","e","target","value","newLists","index","findIndex","list","push","deleteTodo","elt","splice","handleInputValidation","onClick","style","Fragment","onChange","onKeyDown","code","onBlur","type","length","map","id","htmlFor","filter","removeItem","List","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","StyledTitle","h2","Listing","ul","StyledButton","button","AddButton","nombre","addList","StyledMain","main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.950d1b82.chunk.js","sourcesContent":["export const colors = {\r\n    blue: '#42CAFD',\r\n    green: '#66B3BA',\r\n    olive: '#8EB19D',\r\n    yellow: '#F6EFA6',\r\n    pink: '#F0D2D1'\r\n};","import styled from \"styled-components\";\nimport { colors } from \"../../utils/colors\";\n\nconst StyledHeading = styled.h1`\n  text-align:center;\n  color:${colors.green}\n`;\n\nconst Header = () => {\n  return (\n    <header>\n      <StyledHeading>ToDo List</StyledHeading>\n    </header>\n  );\n};\n\nexport default Header;","import React, { useState } from \"react\";\r\n\r\nconst Todo = ({ lists, setLists, todo }) => {\r\n\r\n    const [isSelected, setSelected] = useState(false);\r\n    const [name, setName] = useState(todo.name);\r\n\r\n    const addTask = (e) => {\r\n        if (e.target.value !== \"\") {\r\n            const newLists = [...lists];\r\n            let index = newLists.findIndex(value => value.name === todo.name);\r\n            newLists[index].list.push(e.target.value);\r\n            setLists(newLists);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n    const removeItem = (todo, index) => {\r\n        todo.list.splice(index, 1);\r\n        let newLists = [...lists];\r\n        newLists.filter(elt => elt.name !== todo.name);\r\n        setLists(newLists);\r\n    }\r\n\r\n    const deleteTodo = () => {\r\n        const newLists = [...lists];\r\n        let index = newLists.findIndex(elt => elt.name === todo.name);\r\n        newLists.splice(index, 1);\r\n        setLists(newLists);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const handleInputValidation = (e) => {\r\n        if (e.target.value !== '') {\r\n            const newLists = [...lists];\r\n            let index = newLists.findIndex(elt => elt.name === todo.name);\r\n            newLists[index].name = name;\r\n            setLists(newLists);\r\n            setSelected(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isSelected && <h3 onClick={() => setSelected(true)}>{name}<span onClick={deleteTodo} style={{ 'cursor': 'pointer' }}>    ❌     </span></h3>}\r\n            {isSelected && <React.Fragment><input onChange={handleInputChange} onKeyDown={(e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                    handleInputValidation(e);\r\n                }\r\n            }} onBlur={handleInputValidation} style={{ 'margin': '1.5rem' }} type='text' value={name} /><span onClick={deleteTodo} style={{ 'cursor': 'pointer' }}>    ❌     </span></React.Fragment>}\r\n            <ul>\r\n                {todo.list.length > 0 && todo.list.map((elt, index) => <li key={`task-${elt}-${index}`}><input type=\"checkbox\" id={`task-${elt}-${index}`} /><label htmlFor={`task-${elt}-${index}`}>{elt}<span onClick={() => removeItem(todo, index)} style={{ 'cursor': 'pointer' }}>     ❌     </span></label></li>)}\r\n                <li><input onKeyDown={(e) => {\r\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                        addTask(e);\r\n                    }\r\n                }} onBlur={addTask} type=\"text\" /></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Todo from \"../Todo\";\r\nimport './todo.css';\r\n\r\nconst List = ({ lists, setLists }) => {\r\n\r\n    useEffect(() => {\r\n        setLists(JSON.parse(localStorage.getItem('todoLists')) ?? []);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todoLists', JSON.stringify(lists));\r\n    }, [lists]);\r\n\r\n    const StyledTitle = styled.h2`\r\n        text-align:center;\r\n        padding-right:10rem;\r\n    `;\r\n\r\n    const Listing = styled.ul`\r\n        width:fit-content;\r\n        margin: 0 auto;\r\n    `;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {lists.length > 0 && <StyledTitle>Mes listes : </StyledTitle>}\r\n            <Listing>\r\n                {lists.map((todo, index) => {\r\n                    return (<Todo key={`${todo.name}-${index}`} lists={lists} setLists={setLists} todo={todo} />);\r\n                })}\r\n            </Listing>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default List;","import styled from \"styled-components\";\r\nimport { colors } from \"../../utils/colors\";\r\n\r\nconst StyledButton = styled.button`\r\n    width: 60%;\r\n    display:block;\r\n    margin: 1rem auto;\r\n    height:50px;\r\n    border: none;\r\n    background: linear-gradient(to bottom right, ${colors.green}, ${colors.olive});\r\n    color: ${colors.yellow};\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n    &:hover{\r\n        background: linear-gradient(to bottom right, ${colors.olive}, ${colors.green});\r\n    }\r\n`;\r\n\r\nconst AddButton = ({ lists, setLists }) => {\r\n\r\n    const addList = () => {\r\n        const nombre = lists.length + 1;\r\n        setLists([...lists, { name: `Liste ${nombre}`, list: [] }]);\r\n    }\r\n\r\n    return <StyledButton onClick={() => addList()}>Ajouter une liste</StyledButton>;\r\n};\r\n\r\nexport default AddButton;","import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport List from \"./List\";\r\nimport AddButton from \"./AddButton\";\r\nimport '../utils/GlobalStyle.css';\r\n\r\nconst StyledMain = styled.main`\r\n  width: 60%;\r\n  margin: 2rem auto;\r\n`;\r\n\r\nconst App = () => {\r\n    const [lists, setLists] = useState([]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <StyledMain>\r\n                <List lists={lists} setLists={setLists} />\r\n                <AddButton lists={lists} setLists={setLists} />\r\n            </StyledMain>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}